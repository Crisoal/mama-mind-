# Generated by Django 5.2 on 2025-05-19 07:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DietaryPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PregnancyCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NutritionTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('source', models.CharField(blank=True, max_length=200)),
                ('trimester', models.IntegerField(blank=True, null=True)),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chatbot.pregnancycondition')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('trimester', models.IntegerField(blank=True, null=True)),
                ('other_dietary_preferences', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('cultural_preferences', models.CharField(blank=True, max_length=100)),
                ('other_conditions', models.TextField(blank=True)),
                ('wants_meal_plans', models.BooleanField(default=False)),
                ('wants_nutrition_tips', models.BooleanField(default=False)),
                ('wants_recipe_suggestions', models.BooleanField(default=False)),
                ('wants_nutrition_qa', models.BooleanField(default=False)),
                ('conversation_state', models.CharField(default='START', max_length=50)),
                ('dietary_preferences', models.ManyToManyField(blank=True, to='chatbot.dietarypreference')),
                ('pregnancy_conditions', models.ManyToManyField(blank=True, to='chatbot.pregnancycondition')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('response', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='chatbot.user')),
            ],
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('meal_plan_data', models.JSONField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='chatbot.user')),
            ],
            options={
                'unique_together': {('user', 'week_number')},
            },
        ),
    ]
